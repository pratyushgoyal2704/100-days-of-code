class Solution {
public:
    
    TreeNode* invertTree(TreeNode* root) {
        
        if(root==NULL) return NULL;
        
        TreeNode* left = invertTree(root->left);
        TreeNode* right = invertTree(root->right);
        
        root->right = left;
        root->left = right;
        
        return root;       
        
        
    }
};


// Iteration 

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(!root) return NULL;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()) {
            TreeNode* temp = q.front();
            q.pop();
            TreeNode* tempLeft = temp->left;
            temp->left = temp->right;
            temp->right = tempLeft;
            if(temp->left != NULL) q.push(temp->left);
            if(temp->right != NULL) q.push(temp->right);
        }
        return root;
    }
};
