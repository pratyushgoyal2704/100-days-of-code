//Brilliant trick to reduce no. of data structures used. Pretty straightforward problem. When you see 'unique' 'without repitition', think of sets.   

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        
        unordered_set<string> seen;
        
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]!='.'){
                    if(seen.find(to_string(board[i][j]) + " found at row " + to_string(i))!=seen.end() || seen.find(to_string(board[i][j]) + " found at col " + to_string(j))!=seen.end() || seen.find(to_string(board[i][j]) + " found at box " + to_string(i/3) + to_string(j/3))!=seen.end()){
                        return false;
                    }
                    else{
                        seen.insert(to_string(board[i][j]) + " found at row " + to_string(i));
                        seen.insert(to_string(board[i][j]) + " found at col " + to_string(j));
                        seen.insert(to_string(board[i][j]) + " found at box " + to_string(i/3) + to_string(j/3));
                    }
                }
            }
        }
        return true;
        
    }
};
