class Solution {
public:
    bool isValid(string s) {
        if(s.size()==0 || s.size()==1) return false;
        stack<char> st;
        for(int i=0;i<s.size();i++){
            if(s[i]=='(' || s[i]=='[' || s[i]=='{'){
                st.push(s[i]);
            }
            else{
                if(s[i]==')'){
                    if(!st.empty() && st.top()=='('){
                        st.pop();
                    }
                    else{
                        return false;
                    }
                }
                if(s[i]=='}'){
                    if(!st.empty() && st.top()=='{'){
                        st.pop();
                    }
                    else{
                        return false;
                    }
                }
                if(s[i]==']'){
                    if(!st.empty() && st.top()=='['){
                        st.pop();
                    }
                    else{
                        return false;
                    }
                }
            }
        }
        return st.empty();
    }
};

// 

class Solution {
public:
    bool isValid(string s) {
        stack<char> st;
        for(int i = 0; i < s.size(); i++) {
            
            if (s[i] == '(' || s[i] == '[' || s[i] == '{') {
                st.push(s[i]);
            }
            
            else {
                if (s[i] == ')' && !st.empty()) {
                    if (st.top() != '(') {
                        return false;
                    }
                    else {
                      st.pop();  
                    }
                    
                }
                else if (s[i] == '}' && !st.empty()) {
                    if (st.top() != '{') {
                        return false;
                    }
                    else {
                        st.pop();
                    }
                    
                }
                else if (s[i] == ']' && !st.empty()) {
                    if (st.top() != '[') {
                        return false;
                    }
                    else {
                       st.pop(); 
                    }
                    
                }
                else {
                    return false;
                }
            }
        }
        return st.empty();
    }
};
