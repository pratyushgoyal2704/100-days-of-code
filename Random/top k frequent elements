class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        if (k == nums.size()) {
            return nums;
        }
        vector<int> ans;
        unordered_map<int,int> mapp;
        for(int num : nums) {
            if(mapp.find(num)!=mapp.end()) {
                mapp[num]++;
            }
            else {
                mapp[num] = 1;
            }
        }
        auto cmp = [](pair<int,int> a, pair<int,int> b) {
            return a.second < b.second;
        };
        priority_queue<pair<int,int>, vector<pair<int,int>>, decltype(cmp)> pq(cmp);
        for(auto it : mapp) {
            pair<int,int> temp;
            temp.first = it.first;
            temp.second = it.second;
            pq.push(temp);
        }
        while(k--) {
            ans.push_back(pq.top().first);
            pq.pop();
        }
        return ans;
    }
};
