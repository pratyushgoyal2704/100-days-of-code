/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    void reorderList(ListNode* head) {
        if(!head || !head->next) return;
        ListNode* slow = head;
        ListNode* fast = head;
        ListNode* prevSlow = NULL;
        
        while(fast && fast->next) {
            prevSlow = slow;
            slow = slow->next;
            fast = fast->next->next;
        }
        
        prevSlow->next = NULL;
        
        ListNode* next = NULL;
        ListNode* prev = NULL;
        ListNode* curr = slow;
        
        while(curr!=NULL) {
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        
        
        ListNode* tempHead = new ListNode(-1);
        ListNode* prevHead = tempHead;
        
        while(head && prev) {
            prevHead->next = head;
            head = head->next;
            prevHead = prevHead->next;
            prevHead->next = prev;
            prev = prev->next;
            prevHead = prevHead->next;
        }
        

        
        return;
        
        
    }
};
