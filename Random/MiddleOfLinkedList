class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        
        if(!head || !head->next) return head;
        
        int size = 0;
        ListNode* temp = head;
        while (temp) {
            temp = temp->next;
            size++;
        }
        temp = head;
        if (size % 2 == 0) {
            size = size / 2;
            while(size--) {
                temp = temp->next;
            }
        }
        else {
            size = size / 2;
            while(size--) {
                temp = temp -> next;
            }
            
        }
        return temp;
    }
};

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast && fast->next) {
            slow = slow->next;
            fast = fast->next->next;
        }
        return slow;
    }
};
