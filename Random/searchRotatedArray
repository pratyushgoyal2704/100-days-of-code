//Modified binary search 
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        int start = 0;
        int end = n-1;
        
        while(start<=end){
            int mid = start + (end-start)/2;
            if(nums[mid]==target) {
                return mid;
            }
            else if(nums[mid]<=nums[end]){ //Right half is sorted
                if(target>nums[mid] && target<=nums[end]) start = mid+1; // Checking if target lies in that range. i.e search in the sorted half   
                else {
                    end = mid-1;
                }
            }
            else if(nums[mid]>=nums[start]) //Left half is sorted, change condition
                if(target>=nums[start] && target<nums[mid]) {
                    end = mid - 1;
                }
            else {
                start = mid + 1;
            }
        }
        return -1;
    }
};
//mycodeschool great explanation
