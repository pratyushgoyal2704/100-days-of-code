// Approach 1 : Merge LL one by one 
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.size() == 0) return NULL;
        if(lists.size() == 1) return lists[0];
        
        ListNode* head1 = lists[0];
        ListNode* head2 = lists[1];
        ListNode* dummyHead = new ListNode(-1);
        ListNode* dummy = dummyHead;
        while(head1 != NULL && head2 != NULL) {
            if(head1->val < head2->val) {
                dummy->next = head1;
                head1 = head1->next;
                dummy = dummy->next;
            }
            else {
                dummy->next = head2;
                head2 = head2->next;
                dummy = dummy->next;
            }
        }
        
        if(head1 == NULL) {
            dummy->next = head2;
        }
        else if (head2 == NULL) {
            dummy->next = head1;
        }
        
        for(int i = 2; i < lists.size(); i++) {
            ListNode* d = dummyHead;
            ListNode* h1 = dummyHead->next;
            ListNode* h2 = lists[i];
            
            while(h1 != NULL && h2!=NULL) {
                if(h1->val < h2->val) {
                    d->next = h1;
                    h1 = h1->next;
                    d = d->next;
                }
                else {
                    d->next = h2;
                    h2 = h2->next;
                    d = d->next;
                }
            }
            if(h1 == NULL) {
                d->next = h2;
            }
            else if (h2 == NULL) {
                d->next = h1;
            }
            
        }
        
        return dummyHead->next;
    }
};
