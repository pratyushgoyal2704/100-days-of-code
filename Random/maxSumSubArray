class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        if(nums.size()==1) return nums[0];
        int maxSum = INT_MIN;
        for(int i=0;i<nums.size();i++){
            int curSum = 0;
            for(int j=i;j<nums.size();j++){
                curSum = curSum + nums[j];
                maxSum = max(maxSum,curSum);
            }
        }
        return maxSum;
    }
};


// Kadane's algo

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int cs = 0;
        int ms = INT_MIN;
        for(int i=0;i<nums.size();i++){
            cs = max(nums[i],cs+nums[i]);
            ms = max(ms,cs);
        }
        return ms;
    }
};
